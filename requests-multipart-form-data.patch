diff --git a/library/Requests/Transport/cURL.php b/library/Requests/Transport/cURL.php
index 01bcf3b..2123156 100644
--- a/library/Requests/Transport/cURL.php
+++ b/library/Requests/Transport/cURL.php
@@ -317,6 +317,11 @@ class Requests_Transport_cURL implements Requests_Transport {
 			$headers['Connection'] = 'close';
 		}

+		if (isset($headers['Content-Type']) && $headers['Content-Type'] === 'multipart/form-data')
+			$is_multipart_form = true;
+		else
+			$is_multipart_form = false;
+
 		/**
 		 * Add "Expect" header.
 		 *
@@ -341,7 +346,7 @@ class Requests_Transport_cURL implements Requests_Transport {
 				$url  = self::format_get($url, $data);
 				$data = '';
 			}
-			elseif (!is_string($data)) {
+			elseif (!is_string($data) && !$is_multipart_form) {
 				$data = http_build_query($data, null, '&');
 			}
 		}
diff --git a/library/Requests/Transport/fsockopen.php b/library/Requests/Transport/fsockopen.php
index 56f94c9..66a6402 100644
--- a/library/Requests/Transport/fsockopen.php
+++ b/library/Requests/Transport/fsockopen.php
@@ -157,7 +157,20 @@ class Requests_Transport_fsockopen implements Requests_Transport {

 		if ($options['type'] !== Requests::TRACE) {
 			if (is_array($data)) {
-				$request_body = http_build_query($data, '', '&');
+				if (isset($case_insensitive_headers['Content-Type']) && $case_insensitive_headers['Content-Type']==='multipart/form-data')
+				{
+					$boundary = '------------------------'.substr(md5(rand()), 0, 16);
+					$headers['Content-Type'] = sprintf('multipart/form-data; boundary=%s', $boundary);
+
+					foreach ($data as $key=>$value)
+					{
+						$request_body .= '--'.$boundary."\r\n";
+						$request_body .= sprintf("Content-Disposition: form-data; name=\"%s\"\r\n\r\n%s\r\n", $key, $value);
+					}
+					$request_body .= '--'.$boundary."--\r\n";
+				}
+				else
+					$request_body = http_build_query($data, null, '&');
 			}
 			else {
 				$request_body = $data;
diff --git a/tests/Transport/Base.php b/tests/Transport/Base.php
index facedd4..aaa1cc7 100644
--- a/tests/Transport/Base.php
+++ b/tests/Transport/Base.php
@@ -226,6 +226,18 @@ abstract class RequestsTest_Transport_Base extends PHPUnit_Framework_TestCase {
 		$this->assertSame(array('test' => 'true', 'test2[test3]' => 'test', 'test2[test4]' => 'test-too'), $result['form']);
 	}

+	public function testPOSTWithMultipartData() {
+		$data = array(
+			'test' => 'true',
+			'test2' => 'test',
+		);
+		$request = Requests::post('http://httpbin.org/post', array('Content-Type'=>'multipart/form-data'), $data, $this->getOptions());
+		$this->assertEquals(200, $request->status_code);
+		$result = json_decode($request->body, true);
+		$this->assertEquals(array('test' => 'true', 'test2' => 'test'), $result['form']);
+	}
+
+
 	public function testRawPUT() {
 		$data    = 'test';
 		$request = Requests::put(httpbin('/put'), array(), $data, $this->getOptions());
